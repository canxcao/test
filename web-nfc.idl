enum NFCRecordType {
    "empty",
    "text",
    "url",
    "json",
    "opaque"
};

typedef (DOMString or unrestricted double or ArrayBuffer or Dictionary) NFCRecordData;

dictionary NFCRecord {
    NFCRecordType recordType;
    USVString     mediaType;
    NFCRecordData data;
};
dictionary NFCMessage {
    sequence<NFCRecord> data;
    USVString           url;
};
partial interface Navigator {
    readonly attribute NFC nfc;
};
typedef (DOMString or ArrayBuffer or NFCMessage) NFCPushMessage;

interface NFC {
    Promise<void> push(NFCPushMessage message, optional NFCPushOptions options);
    Promise<void> cancelPush(optional NFCPushTarget target = "any");
    Promise<long> watch(MessageCallback callback,
                        optional NFCWatchOptions options);
    Promise<void> cancelWatch(optional long id);
};

callback MessageCallback = void (NFCMessage message);
enum NFCPushTarget {
    "tag",
    "peer",
    "any"
};

dictionary NFCPushOptions {
    NFCPushTarget       target = "any";
    unrestricted double timeout = Infinity;
    boolean             ignoreRead = true;
};
enum NFCWatchMode {
    "web-nfc-only",
    "any"
};

dictionary NFCWatchOptions {
    USVString      url = "";
    NFCRecordType? recordType;
    USVString      mediaType = "";
    NFCWatchMode   mode = "web-nfc-only";
};